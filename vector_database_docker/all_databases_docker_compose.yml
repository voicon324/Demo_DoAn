version: '3.8'

services:
  # Milvus Stack
  etcd:
    container_name: unified-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ./all_dbs_data/milvus_volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - all_dbs_network

  minio:
    container_name: unified-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
    ports:
      - "9001:9001" # MinIO Console
      - "9000:9000" # MinIO API
    volumes:
      - ./all_dbs_data/milvus_volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - all_dbs_network

  milvus:
    container_name: unified-milvus
    image: milvusdb/milvus:v2.4.15
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ./all_dbs_data/milvus_volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530" # Milvus API
      - "9091:9091"   # Milvus Metrics
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    networks:
      - all_dbs_network

  # Weaviate Stack
  weaviate:
    container_name: unified-weaviate
    image: semitechnologies/weaviate:1.24.10
    ports:
      - "8080:8080" # Weaviate REST
      - "50051:50051" # Weaviate gRPC
    volumes:
      - ./all_dbs_data/weaviate_data:/var/lib/weaviate    
    environment:
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'multi2vec-clip'
      ENABLE_MODULES: 'multi2vec-clip'
      CLIP_INFERENCE_API: 'http://unified-weaviate-clip-module:8080'
      # TRANSFORMERS_INFERENCE_API: 'http://weaviate-transformers-module:8080'
      CLUSTER_HOSTNAME: 'unified-weaviate-node1'
      LOG_LEVEL: 'info'
      QUERY_DEFAULTS_LIMIT: 25
      ENABLE_GRPC: "true"
    depends_on:      
      - weaviate-clip-module
      # - weaviate-transformers-module
    restart: on-failure
    networks:
      - all_dbs_network 

  weaviate-clip-module:
    container_name: unified-weaviate-clip-module
    image: semitechnologies/multi2vec-clip:sentence-transformers-clip-ViT-B-32-multilingual-v1
    environment:
      ENABLE_CUDA: '0'
    networks:
      - all_dbs_network

  # weaviate-transformers-module:
  #   container_name: unified-weaviate-transformers-module
  #   image: semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
  #   environment:
  #     ENABLE_CUDA: '0'
  #   networks:
  #     - all_dbs_network

  # Qdrant Stack
  qdrant:
    container_name: unified-qdrant
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333" # Qdrant HTTP
      - "6334:6334" # Qdrant gRPC
    volumes:
      - ./all_dbs_data/qdrant_storage:/qdrant/storage
    networks:
      - all_dbs_network

networks:
  all_dbs_network:
    driver: bridge
    name: all_dbs_network
